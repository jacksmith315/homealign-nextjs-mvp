version: '3.8'

services:
  # Next.js Application
  nextjs-app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXTAUTH_URL=http://localhost:3000
      - NEXTAUTH_SECRET=development-secret-key-change-in-production
      - DJANGO_API_URL=http://django-api:8000
      - DJANGO_API_BASE_URL=http://django-api:8000/core-api
    depends_on:
      - django-api
    networks:
      - homealign-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Django API (assuming it exists)
  django-api:
    image: homealign-django:latest
    ports:
      - "8000:8000"
    environment:
      - DJANGO_DEBUG=False
      - DJANGO_SECRET_KEY=your-django-secret-key
      - DATABASE_URL=postgresql://user:password@postgres:5432/homealign
    depends_on:
      - postgres
    networks:
      - homealign-network
    restart: unless-stopped

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=homealign
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - homealign-network
    restart: unless-stopped

  # Redis for session storage (optional)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    networks:
      - homealign-network
    restart: unless-stopped
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data

networks:
  homealign-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data: